[project]
name = "cyberdrop-dl-patched"
authors = [{name = "Jacob B", email = "admin@script-ware.net"}]
dependencies = [
    "aiodns >=3.5.0",
    "aiofiles >=25.1.0",
    "aiohttp[speedups] >=3.13.1",
    "aiohttp-client-cache ==0.13.0",
    "aiolimiter >=1.2.1",
    "aiosqlite==0.17.0",
    "apprise >=1.9.5",
    "asyncpraw >=7.8.1",
    "beautifulsoup4 >=4.14.2",
    "certifi >=2025.10.5",
    "curl-cffi >=0.13; implementation_name == 'cpython' ",
    "dateparser >=1.2.2",
    "get-video-properties >=0.1.1",
    "inquirerpy >=0.3.4",
    "jeepney >=0.9.0; 'bsd' in sys_platform or sys_platform == 'linux'",
    "m3u8 >=6.0.0",
    "myjdapi >=1.1.10",
    "packaging >=25.0",
    "pillow >=11.3.0",
    "propcache >=0.4.1",
    "psutil >=7.1.0",
    "pycares >=4.10.0",
    "pycryptodome >=3.23.0",
    "pydantic >=2.12.3",
    "pyyaml >=6.0.3",
    "rich >=14.2.0",
    "send2trash >=1.8.3",
    "truststore >=0.10.4",
    "xxhash >=3.6.0",
    "yarl >=1.22.0"
]
description = "Bulk downloader for multiple file hosts"
license = "GPL-3.0-only"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.11,<4"
version = "8.4.0"

[project.scripts]
cyberdrop-dl = "cyberdrop_dl.main:main"
cyberdrop-dl-patched = "cyberdrop_dl.main:main"

[project.urls]
Changelog = "https://github.com/jbsparrow/CyberDropDownloader/blob/master/CHANGELOG.md"
Documentation = "https://script-ware.gitbook.io/cyberdrop-dl/"
Repository = "https://github.com/jbsparrow/CyberDropDownloader"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "py-markdown-table>=1.3.0",
    "ruff>=0.14.1",
    "tox>=4.28.0"
]
test = [
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock",
    "pytest>=8.4.1"
]

[tool.coverage.report]
exclude_also = [
    '@(abc\.)?abstractmethod',
    'class .*\bProtocol\):',
    'if __name__ == .__main__.:',
    'if env.DEBUG_VAR:',
    'if TYPE_CHECKING:'
]

[tool.coverage.run]
omit = [
    "tests/*"
]

[tool.poetry]
include = ["CHANGELOG.md"]
packages = [{include = "cyberdrop_dl"}]
requires-poetry = ">=2.2.0"

[tool.pytest.ini_options]
addopts = ["-s"]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
filterwarnings = [
    "ignore:Proactor event loop does not implement add_reader:UserWarning"
]
markers = [
    "crawler_test_case: tests that do full run with a crawler (making actual network requests)"
]
minversion = "8.4.1"

[tool.ruff]
exclude = ["cyberdrop_dl/dependencies/_browser_cookie3.py"]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    "ANN201",  # flake8-annotations
    "ANN205",  # flake8-annotations
    "ANN206",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "COM",  # flake8-commas
    "E",  # pycodestyle
    "EM",  # flake8-errmsg
    "EXE",  # flake8-executable
    "F",  # pyflakes
    "FA",  # flake8-future-annotations
    "FURB",  # refurb
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "ISC",  # flake8-implicit-str-concat
    "N",  # pep8-naming
    "PIE",  # flake8-pie
    "PL",  # Pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # ruff-specific
    "SIM",  # flake8-simplify
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TC",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W"  # pycodestyle warnings
]
extend-safe-fixes = [
    "TC"  # move import from and to TYPE_CHECKING blocks
]
ignore = [
    "ANN201",  # missing-return-type-undocumented-public-function
    "COM812",  # missing-trailing-comma
    "E501",  # suppress line-too-long, let formatter decide
    "EM101",  # raw-string-in-exception
    "INP001",  # implicit-namespace-package
    "N806",  # uppercase variables in functions
    "PLC0415",  # import-outside-top-level
    "PLR0913",  # too-many-arguments
    "PLR2004",  # magic-value-comparison
    "PLW2901",  # redefined-loop-name
    "RET503",  # implicit-return
    "S101",  # assert
    "SLF001",  # Private member accessed
    "TRY003",  # raise-vanilla-args
    "TRY301"  # raise-within-try
]
unfixable = [
    "ERA"  # do not autoremove commented out code
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.flake8-type-checking]
# Add quotes around type annotations, if doing so would allow
# an import to be moved into a type-checking block.
quote-annotations = true

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs}/*" = [
    "E402",  # imports not at the top of the file.
    "T20"  # flake8-print
]
"__init__.py" = ["E402"]  # imports not at the top of the file.

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-returns = 20

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
sort_first = ["name", "project", "select"]
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
