[tool.poetry]
name = "cyberdrop-dl-patched"
authors = ["Jacob B <admin@script-ware.net>"]
description = "Bulk downloader for multiple file hosts"
documentation = "https://script-ware.gitbook.io/cyberdrop-dl/"
include = ["CHANGELOG.md"]
packages = [{include = "cyberdrop_dl"}]
readme = "README.md"
repository = "https://github.com/jbsparrow/CyberDropDownloader"
version = "6.1.0"

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
aiofiles = "^24.1.0"
aiohttp = "^3.11.10"
aiohttp-client-cache = "^0.12.4"
aiolimiter = "^1.2.1"
aiosqlite = "0.17.0"
apprise = "^1.9.0"
arrow = "^1.3.0"
asyncpraw = "^7.8.0"
beautifulsoup4 = "^4.12.2"
certifi = "^2024.12.14"
filedate = "^3.0"
get-video-properties = "^0.1.1"
inquirerpy = "^0.3.4"
jeepney = [{platform = "bsd", version = "^0.8.0"}, {platform = "linux", version = "^0.8.0"}]
mediafire = "^0.6.1"
myjdapi = "^1.1.7"
pillow = "^11.0.0"
platformdirs = "^4.3.6"
pycryptodomex = "^3.21.0"
pydantic = "^2.10.4"
pywin32 = {platform = "win32", version = "^308"}
pyyaml = "^6.0.2"
rich = "^13.9.4"
send2trash = "^1.8.3"
xxhash = "^3.5.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
ruff = "^0.8.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.0"
pytest-cov = "^6.0.0"
pytest-mock = "*"

[tool.poetry.scripts]
cyberdrop-dl = "cyberdrop_dl.main:main"

[tool.poetry.urls]
Changelog = "https://github.com/jbsparrow/CyberDropDownloader/blob/master/CHANGELOG.md"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "module"
asyncio_mode = "auto"
minversion = "8.3"
testpaths = ["tests"]

[tool.ruff]
exclude = ["cyberdrop_dl/dependencies/browser_cookie3/__init__.py"]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "ASYNC",  # async calls that do not await anything or use blocking methods
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "COM8",  # flake8-commas linter
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "FA102",  # future annotations
    "I",  # isort
    "N",  # PEP8 naming conventions
    "PTH",  # use pathlib instead of os
    "Q",  # flake8-quotes
    "RUF",  # RUF specific fixes
    "T20",  # flake8-print
    "TC",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",  # pyupgrade
    "W"  # pycodestyle warnings
]
extend-safe-fixes = [
    "TC"  # move import from and to TYPE_CHECKING blocks
]
ignore = [
    "COM812",  # missing-trailing-comma
    "E501",  # suppress line-too-long, let formatter decide
    "N806"  # uppercase variables in functions
]
unfixable = [
    "ERA"  # do not autoremove commented out code
]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs}/*" = ["E402", "T20"]  # imports not at the top of the file.
"__init__.py" = ["E402"]  # imports not at the top of the file.

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = true
ignore_case = true
in_place = true
sort_first = ["name", "python", "select", "tool"]
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
